# Define o gatilho (trigger) da pipeline. Ela será executada a cada commit na branch 'master'.
trigger:
- master

# Define o ambiente de execução da pipeline. Usaremos o pool 'Default' do nosso agente self-hosted.
pool: 'Default'

# Define variáveis que podem ser reutilizadas na pipeline.
variables:
  imageName: 'fiap-cloud-games' # Nome da imagem Docker que será gerada
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  acrServiceConnection: 'ConexaoAzureContainerRegistry'
  acrLoginServer: 'acimel.azurecr.io'

stages:
- stage: Build
  displayName: 'Build da Imagem Docker'
  jobs:
  - job: Build
    displayName: Build
    steps:
    - task: Docker@2
      displayName: 'Build da Imagem'
      inputs:
        command: 'build'
        repository: '$(imageRepository)'
        dockerfile: '$(dockerfilePath)'
        tags: '$(Build.BuildId)'

- stage: Push
  displayName: 'Push da Imagem para o ACR'
  dependsOn: Build # Só executa se o Build for bem-sucedido
  jobs:
  - job: Push
    displayName: Push
    steps:
    - task: Docker@2
      displayName: 'Login no ACR'
      inputs:
        command: 'login'
        containerRegistry: '$(acrServiceConnection)'

    - task: Docker@2
      displayName: 'Tag da Imagem'
      inputs:
        command: 'tag'
        repository: '$(imageRepository)'
        tags: '$(Build.BuildId)'
        arguments: '$(acrLoginServer)/$(imageRepository):$(Build.BuildId)'

    - task: Docker@2
      displayName: 'Push da Imagem'
      inputs:
        command: 'push'
        repository: '$(imageRepository)'
        containerRegistry: '$(acrServiceConnection)'
        tags: '$(Build.BuildId)'