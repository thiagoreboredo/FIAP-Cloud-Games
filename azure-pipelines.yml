trigger:
- master

# Define o ambiente de execução da pipeline. Usaremos o pool 'Default' do nosso agente self-hosted.
pool: 'Default'

# Define variáveis que podem ser reutilizadas na pipeline.
variables:
  imageRepository: 'fiap-cloud-games'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'
  acrServiceConnection: 'ConexaoAzureContainerRegistry'  
  acrLoginServer: 'acimel.azurecr.io'

stages:
- stage: Build
  displayName: 'Build da Imagem Docker'
  jobs:
  - job: BuildJob
    displayName: 'Build'
    pool: 'Default'
    steps:
    - task: Docker@2
      displayName: 'Build da Imagem'
      inputs:
        command: 'build'
        repository: '$(imageRepository)'
        dockerfile: '$(dockerfilePath)'
        tags: '$(tag)'

- stage: Push
  displayName: 'Push da Imagem para o Azure Container Registry'
  dependsOn: Build
  jobs:
  - job: PushJob
    displayName: 'Push'
    pool: 'Default'
    steps:
    - task: Docker@2
      displayName: 'Login no Azure Container Registry'
      inputs:
        command: 'login'
        containerRegistry: '$(acrServiceConnection)'

    - task: Docker@2
      displayName: 'Push da Imagem para o Azure Container Registry'
      inputs:
        command: 'push'
        repository: '$(imageRepository)'
        containerRegistry: '$(acrServiceConnection)'
        tags: |
          $(tag)